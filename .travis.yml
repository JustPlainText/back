sudo: required
dist: trusty
language: java
jdk:
  - oraclejdk8
services:
  - docker

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/google-cloud-sdk/

before_install:
- export VERSION=`date +%Y%m%d%H%M`

script:
- gradle clean build

after_success:
# create docker image with new tag (neue Version, weil sonst (nur mit latest) der k8s deployment update nicht funktioniert)
- docker build -t jptttttt/back:$VERSION .
# tag 'latest' auf die neue Version setzen. Einfach so, hat bis jetzt keine Relevanz bei uns
- docker tag jptttttt/back:$VERSION jptttttt/back:latest
# bei docker hub einlogen. Zugangsdaten werden als Envs im Travis Projekt-Settings abgelegt
- docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
# image pushen
- docker push jptttttt/back:$VERSION
- docker push jptttttt/back:latest
## gloud part
- gcloud version || true
# wenn gcloud noch nicht installiert ist - dann das machen https://goo.gl/JMcBBk
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
# Add gcloud to $PATH
- source $HOME/google-cloud-sdk/path.bash.inc
- gcloud version
# key file for gcloud login entschluesseln, pass wird ebenfalls aus der Travis Envs geholt
- openssl enc -aes-256-cbc -pass pass:$G_DEPLOYER_ENC_PASS -p -in secure/jpt-deployer-key.enc -out secure/jpt-deployer-key.json -base64 -d
# gcloud login and set cluster & project data
- gcloud auth activate-service-account --key-file secure/jpt-deployer-key.json
- gcloud config set project jpt-21
- gcloud config set compute/zone us-central1-b
# install kubectl
- gcloud components install kubectl
# set kubectl context & cluster
- gcloud container clusters get-credentials jpt
# update cluster mit dem neuen image
- kubectl set image deployment/back back=jptttttt/back:$VERSION

#deploy:
