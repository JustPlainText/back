buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

version = '1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	compile('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	

	compile group: 'javax.inject', name: 'javax.inject', version: '1'
	
	compile group: 'com.google.cloud', name: 'google-cloud-datastore', version: '0.12.0-beta'

	
	testCompile group: 'com.google.appengine', name: 'appengine-api-1.0-sdk', version: '1.9.51'
	testCompile group: 'com.google.appengine', name: 'appengine-testing', version: '1.9.51'
	testCompile group: 'com.google.appengine', name: 'appengine-api-stubs', version: '1.9.51'
	testCompile group: 'com.google.appengine', name: 'appengine-api-labs', version: '1.9.51'
	testCompile group: 'com.google.appengine', name: 'appengine-tools-sdk', version: '1.9.51'


	//compile 'com.google.appengine:appengine:+'
}

task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = jar.baseName
  dockerfile = file('Dockerfile')
  
  
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
  
}




